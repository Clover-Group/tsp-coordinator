@page "/tsp-instances"

<PageTitle>TSP instance list</PageTitle>

@using System.Globalization
@using TspCoordinator.Data
@inject IStringLocalizer<TspInstances> Loc
@inject TspInstancesService TSPInstancesService

<h1>TSP instance list</h1>

@if (instances == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>@Loc["Number"]</th>
                <th>TSP ID</th>
                <th>@Loc["Location"]</th>
                <th>@Loc["Version"]</th>
                <th>@Loc["LastHealthCheck"]</th>
                <th>@Loc["Status"]</th>
                <th>@Loc["JobsRunning"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var (instance, index) in instances.Select( (val, idx) => (val, idx + 1) ))
            {
                <tr>
                    <td scope="row">@index</td>
                    <td>@instance.Uuid</td>
                    <td>@instance.Location</td>
                    <td>@instance.Version</td>
                    <td>@instance.HealthCheckDate.ToString("G")</td>
                    <td>
                    @switch(instance.Status)
                    {
                        case TspInstanceStatus.Active:
                            <span class="badge rounded-pill bg-success">@Loc["Active"]</span>
                            break;
                        case TspInstanceStatus.NotWorking:
                            <span class="badge rounded-pill bg-danger">@Loc["NotWorking"]</span>
                            <span class="badge rounded-pill bg-danger">@Loc["HealthCheckAttemptsRemaining"]: @instance.HealthCheckAttemptsRemaining</span>
                            break;
                        case TspInstanceStatus.NotResponding:
                            <span class="badge rounded-pill bg-warning">@Loc["NotResponding"]</span>
                            <span class="badge rounded-pill bg-warning">@Loc["HealthCheckAttemptsRemaining"]: @instance.HealthCheckAttemptsRemaining</span>
                            break;
                        case TspInstanceStatus.CannotGetExtendedInfo:
                            <span class="badge rounded-pill bg-warning">@Loc["Cannot get extended info"]</span>
                            break;
                    }
                    </td>
                    <td>
                        <span>@(instance.RunningJobsCount)</span>
                        @if(instance.SentJobsCount > 0)
                        {
                            <span> + @(instance.SentJobsCount)</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private TspInstance[]? instances;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        
        var timer = new System.Threading.Timer((_) =>
        {
            InvokeAsync( async () =>
            {
               instances = await TSPInstancesService.GetInstancesAsync();
               StateHasChanged();
            });
        }, null, 0, 5000);
    }
}
